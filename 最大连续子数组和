#include <stdio.h>
#include <stdlib.h>
#include <limits.h>

int maxSubArray(int* nums, int numsSize)
{
    int max = INT_MIN;
    int i, j, sum;
    for (i = 0; i < numsSize; i++)
    {
        if (nums[i] > 0)
        {
            break;
        }
    }
    if (i == numsSize)
        return 0;
    for (i = 0; i < numsSize; i++)
    {
        sum = 0;
        for (j = i; j < numsSize; j++)
        {
            sum = nums[j] + sum;
            if (sum > max)
                max = sum;
        }
    }
    return max;
}
int main()
{
    int i;
    int a1[8] = { 1,-2,3,10,-4,7,2,-5 };
    int result1 = maxSubArray(a1, 8);
    printf("原数组为：");
    for (i = 0; i < 8; i++)
        printf("%d ", a1[i]);
    printf("\n最大子数组和为 %d\n", result1);
    int a2[9] = { -2,1,-3,4,-1,2,1,-5,4 };
    int result2 = maxSubArray(a2, 9);
    printf("原数组为：");
    for (i = 0; i < 9; i++)
        printf("%d ", a2[i]);
    printf("\n最大子数组和为 %d\n", result2);
    int a3[6] = { -2,11,-4,13,-5,-2 };
    int result3 = maxSubArray(a3, 6);
    printf("原数组为：");
    for (i = 0; i < 6; i++)
        printf("%d ", a3[i]);
    printf("\n最大子数组和为 %d\n", result3);
    int a4[5] = { -1,-2,-3,-4,-5 };
    int result4 = maxSubArray(a4, 5);
    printf("原数组为：");
    for (i = 0; i < 5; i++)
        printf("%d ", a4[i]);
    printf("\n最大子数组和为 %d\n", result4);
    return 0;
}

